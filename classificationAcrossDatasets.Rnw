%\VignetteEngine{knitr::knitr}
\documentclass{article}

\usepackage{graphicx}
\usepackage{microtype}
\usepackage[T1]{fontenc}
\usepackage{float}
\usepackage[latin1]{inputenc}
\usepackage{geometry}
\usepackage{titlesec}
\geometry{verbose,tmargin=2.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2.5cm}
\usepackage[table]{xcolor}
%\newcommand{\sectionbreak}{\clearpage}

\begin{document}

<<setup, include=FALSE, cache=FALSE>>=
# Set options
knitr::opts_chunk$set(include=TRUE, results="hide", fig.width=8, fig.height=8, fig.path='figures/', fig.align='center', fig.show='hold',warning=FALSE, echo=FALSE, message=FALSE, cache=FALSE)
options(replace.assign=TRUE,width=90)
par.original <- par()
days.per.month <- 30.4368
days.per.year <- 365.242
package.dir <- "~/repos/MetaGx/"
source("../../R/create.survival.plot.R")
@

\title{Robustness of Ovarian Subtyping Schemes}

\author{Gregory M. Chen}
\date{\today}
\maketitle

%\tableofcontents 

<<load, cache=FALSE>>=
library(gdata)
library(HiDimDA)
library(survival)
library(reshape2)
library(genefu)
library(annotate)
library(hgu133plus2.db)
# library(survMisc) 
library(xtable)
library(gridExtra)
library(Biobase)
library(GSVA)
library(sparsediscrim)
library(MetaGxOvarian)
library(survcomp)
library(ggplot2)
library(e1071)
library(randomForest)
library(gridExtra)
library(survcomp)
library(metafor)
library(genefu)

source("../../R/subtypeClassification.R")
source("../../R/setSubtype.R")
source("../../R/stripWhiteSpace.R")

package.dir = "~/repos/MetaGx/"
@

<<load_data, eval=FALSE>>=
#
load("esets.not.rescaled.RData")

source("../../R/getKonecnySubtypes.R")
source("../../R/getVerhaakSubtypes.R")
source("../../R/getHellandSubtypes.R")
source("../../R/getBentinkSubtypes.R")
source("../../R/create.survival.plot.R")


# Subtype classification
esets.not.rescaled.classified <- esets.not.rescaled
# Remove TCGA.RNASeqV2
esets.not.rescaled.classified <- esets.not.rescaled.classified[names(esets.not.rescaled.classified) != "TCGA.RNASeqV2"]

esets.not.rescaled.classified <- lapply(esets.not.rescaled.classified, function(x) getKonecnySubtypes(x)[[1]])
esets.not.rescaled.classified <- lapply(esets.not.rescaled.classified, function(x) getVerhaakSubtypes(x)[[1]])
esets.not.rescaled.classified <- lapply(esets.not.rescaled.classified, function(x) getHellandSubtypes(x)[[1]])
esets.not.rescaled.classified <- lapply(esets.not.rescaled.classified, function(x) getBentinkSubtypes(x)[[1]])
save(esets.not.rescaled.classified, file = "esets.not.rescaled.classified.RData")
@

<<load_data_from_files>>=
load("esets.not.rescaled.classified.RData")
esets.with.survival <- esets.not.rescaled.classified
esets.with.survival <- lapply(esets.with.survival, function(eset) {
  eset[,!is.na(eset$days_to_death) & !is.na(eset$vital_status)]
  })

esets.with.survival <- esets.with.survival[sapply(esets.with.survival, ncol) > 0]
eset.names <- names(esets.with.survival)
esets.with.survival <-lapply(eset.names, function(eset.name) {
  esets.with.survival[[eset.name]]$data.source <- eset.name
  return(esets.with.survival[[eset.name]])
  })
names(esets.with.survival) <- eset.names

ovarian.publication.years <- read.csv("ovarian_publication_years.csv", stringsAsFactors = FALSE)
if(!setequal(ovarian.publication.years$dataset, names(esets.with.survival))) {
  stop("Check \"ovarian_publication_years.csv\"")
}
ovarian.publication.years <- ovarian.publication.years[order(ovarian.publication.years$publication.year),]
esets.with.survival <- esets.with.survival[ovarian.publication.years$dataset]
@

\tableofcontents

<<plot_konecny>>=
par(mfrow=c(4,4))
sapply(names(esets.with.survival), function(x) {
  current.eset <- esets.with.survival[[x]]
  create.survival.plot(surv.time=current.eset$days_to_death / days.per.year,
                       surv.event=current.eset$vital_status == "deceased",
                       groups=current.eset$Konecny.subtype,
                       stats.to.show=c("n","p"),
                       main=paste0("Survival plot: ", x),
                       xlab="Time (years)")
  })
@

<<plot_verhaak>>=
par(mfrow=c(4,4))
sapply(names(esets.with.survival), function(x) {
  current.eset <- esets.with.survival[[x]]
  create.survival.plot(surv.time=current.eset$days_to_death / days.per.year,
                       surv.event=current.eset$vital_status == "deceased",
                       groups=current.eset$Verhaak.subtype,
                       stats.to.show=c("n","p"),
                       main=paste0("Survival plot: ", x),
                       xlab="Time (years)")
  })
@

<<plot_helland>>=
par(mfrow=c(4,4))
sapply(names(esets.with.survival), function(x) {
  current.eset <- esets.with.survival[[x]]
  create.survival.plot(surv.time=current.eset$days_to_death / days.per.year,
                       surv.event=current.eset$vital_status == "deceased",
                       groups=current.eset$Helland.subtype,
                       stats.to.show=c("n","p"),
                       main=paste0("Survival plot: ", x),
                       xlab="Time (years)")
  })
@

<<plot_bentink>>=
par(mfrow=c(4,4))
sapply(names(esets.with.survival), function(x) {
  current.eset <- esets.with.survival[[x]]
  create.survival.plot(surv.time=current.eset$days_to_death / days.per.year,
                       surv.event=current.eset$vital_status == "deceased",
                       groups=current.eset$Bentink.subtype,
                       stats.to.show=c("n","p"),
                       main=paste0("Survival plot: ", x),
                       xlab="Time (years)")
  })
@

<<Contingency_tables>>=
subtype.names <- c("Konecny", "Verhaak", "Helland", "Bentink")

pooled.subtypes <- do.call(rbind, 
  lapply(esets.not.rescaled.classified, function(eset) {
    phenoData <- pData(eset)[,colnames(pData(esets.not.rescaled.classified$E.MTAB.386))]
    for(i in 1:ncol(phenoData)) {
      if(is.factor(phenoData[,i])) {
        phenoData[,i] <- as.character(phenoData[,i])
      }
    }
    return(phenoData)
    }))
pooled.subtypes <- pooled.subtypes[,!(colnames(pooled.subtypes) %in% c("uncurated_author_metadata", "batch") )]

pooled.subtypes.survival <- do.call(rbind, 
    lapply(esets.with.survival, function(eset) pData(eset)[,c("days_to_death", "vital_status", "data.source",  paste0(subtype.names, ".subtypes"))]))

colnames(pooled.subtypes.survival)[4:7] <- sub(".subtypes", "", colnames(pooled.subtypes.survival)[4:7])

pooled.subtypes.survival$Konecny <- factor(pooled.subtypes.survival$Konecny, levels(pooled.subtypes.survival$Konecny)[c(1,2,3,4)])
pooled.subtypes.survival$Verhaak <- factor(pooled.subtypes.survival$Verhaak, levels(pooled.subtypes.survival$Verhaak)[c(2,1,4,3)])
pooled.subtypes.survival$Helland <- factor(pooled.subtypes.survival$Helland, levels(pooled.subtypes.survival$Helland)[c(2,3,4,1)])
pooled.subtypes.survival$Bentink <- factor(pooled.subtypes.survival$Bentink, levels(pooled.subtypes.survival$Bentink)[c(2,1)])

pooled.subtypes.survival$years_to_death = pooled.subtypes.survival$days_to_death / days.per.year
pooled.subtypes.survival$days_to_death <- NULL
pooled.subtypes.survival$vital_status <- pooled.subtypes.survival$vital_status == "deceased"

pooled.subtypes.survival$data.source <- factor(pooled.subtypes.survival$data.source, levels=ovarian.publication.years$dataset)

# Censor to ten years
censor.time.out <- survcomp::censor.time(surv.time = pooled.subtypes.survival$years_to_death, surv.event = pooled.subtypes.survival$vital_status, time.cens = 10)
pooled.subtypes.survival$years_to_death <- censor.time.out$surv.time.cens
pooled.subtypes.survival$vital_status <- censor.time.out$surv.event.cens

pooled.subtypes.survival$surv.obj <- Surv(time = pooled.subtypes.survival$years_to_death, event = pooled.subtypes.survival$vital_status)

pair.matrix <- combn(subtype.names,2)
pair.matrix <- pair.matrix[,c(1,2,4,3,5,6)]

contingency.plots <- apply(pair.matrix, 2, function(subtype.name.pair) {
  contingency.matrix <- as.matrix(table(pooled.subtypes.survival[,subtype.name.pair[1]],pooled.subtypes.survival[,subtype.name.pair[2]]))
  contingency.m <- melt(contingency.matrix)
  colnames(contingency.m) <- c(subtype.name.pair[1], subtype.name.pair[2], "value")
  contingency.m[,subtype.name.pair[1]] <- factor(contingency.m[,subtype.name.pair[1]], levels = levels(pooled.subtypes.survival[,subtype.name.pair[1]]))
  contingency.m[,subtype.name.pair[2]] <- factor(contingency.m[,subtype.name.pair[2]], levels = levels(pooled.subtypes.survival[,subtype.name.pair[2]]))
  
  print(chisq.test(pooled.subtypes.survival[,subtype.name.pair[1]],pooled.subtypes.survival[,subtype.name.pair[2]])["p.value"])
  print(vcd::assocstats(table(pooled.subtypes.survival[,subtype.name.pair[1]],pooled.subtypes.survival[,subtype.name.pair[2]]))[["cramer"]])

  p <- ggplot(contingency.m, aes_string(subtype.name.pair[1], subtype.name.pair[2])) + 
    geom_tile(aes(fill = value), colour = "black") + 
    scale_fill_gradient(name="Frequency", low="white", high="#CC0000", limits=c(0,500)) + 
    ggtitle(paste0("Contingency table: ", subtype.name.pair[1], " vs ", subtype.name.pair[2])) +
    theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), plot.title = element_text(size = rel(1.5))) +
    geom_text(label=as.character(contingency.matrix), colour="black")
  return(p)
})

do.call(grid.arrange, c(contingency.plots, ncol = 2))
pdf("subtype_classifier_conting_fours.pdf", width=17.5, height=5)
do.call(grid.arrange, c(contingency.plots[1:3], ncol = 3))
dev.off()
pdf("subtype_classifier_conting_bentink.pdf", width=17.5, height=2.75)
do.call(grid.arrange, c(contingency.plots[4:6], ncol = 3))
dev.off()
@

<<Pooled.survival>>=

par(mfrow=c(2,2))
#par(mar=c(5,1,0,1))
par(mar=c(5.1, 8, 4.1, 2.1))
for(subtype.name in subtype.names) {
  pdf(paste0(subtype.name, "_pooled_survival.pdf"), width=5, height=5)
  par(mar=c(5.1, 5, 4.1, 2.1))
  survival.df <- pooled.subtypes.survival
  survival.df$groups <- survival.df[,subtype.name]
  
  pval <- summary(coxph(surv.obj ~ groups + strata(data.source), survival.df))$sctest["pvalue"]
  
  hr.out <- survcomp::hazard.ratio(x=survival.df$groups, surv.time=survival.df$years_to_death, surv.event=survival.df$vital_status, strat=survival.df$data.source)
  text <- ""
  if(length(hr.out$hazard.ratio) == 1) {
    text <- paste0(sprintf("HR: %.3f (%.3f-%.3f)\n", hr.out$hazard.ratio, hr.out$lower, hr.out$upper), sprintf("Logrank p = %.1E", pval))
  } else {
    for(i in 1:length(hr.out$hazard.ratio)) {
      text <- paste0(text, sprintf("HR %s: %.3f (%.3f-%.3f)\n", levels(survival.df$groups)[i+1], hr.out$hazard.ratio[i], hr.out$lower[i], hr.out$upper[i]))
    }
     text <- paste0(text, sprintf("Logrank p = %.1E", pval))
  }
  cols <- 1:4
  if(subtype.name == "Bentink") {
    cols <- c("orange", "blue")
  }
  title <- subtype.name
  if(title == "Verhaak") {
    title <- "TCGA / Verhaak"
  }
  if(title == "Helland") {
    title <- "Tothill / Helland"
  }
  km.coxph.plot(surv.obj ~ groups, survival.df, x.label="Time (years)", y.label = "Overall Survival", main.title="", show.n.risk = FALSE, n.risk.step=2, leg.text = levels(survival.df$groups), leg.pos="topright", leg.inset=0, leg.bty="n", n.risk.cex=0.85, cex=0.4, o.text="", .col=cols, cex.lab=1.5)
  title(title, cex.main=2)
  text(0,0.05, text, cex=0.85, pos=4)
  dev.off()
}

@

<<Forest_plots>>=
out <- lapply(ovarian.publication.years$dataset, function(dataset.name) {
  current.survival.df <- pooled.subtypes.survival[pooled.subtypes.survival$data.source == dataset.name,]
  survcomp::hazard.ratio(x = current.survival.df$Konecny, surv.time = current.survival.df$years_to_death, surv.event = current.survival.df$vital_status)
  })
names(out) <- ovarian.publication.years$dataset

rma.out <- lapply(1:3, function(i) {
  loghr.vals <- sapply(out, function(x) x$coef[i])
  loghr.se <- sapply(out, function(x) diag(x$se)[i])
  rma(loghr.vals, sei=loghr.se, method="REML", slab=names(out))
  })

forest(rma.out[[3]], refline=0, annotate=FALSE, atransf=exp, xlim=c(-5, 4), addfit=FALSE, ylim=c(-1.5,length(out) + 3), at=log(c(0.125, 0.25, 0.5, 1, 2, 4, 8, 16, 32)))
abline(h=0, lwd=1)
addpoly(rma.out[[3]], mlab="Random Effects", row=-1, atransf=exp, annotate=TRUE)
@

<<clinical_variables>>=
chisq.test(table(pooled.subtypes$summarystage, pooled.subtypes$Konecny.subtypes))
@

\end{document}
